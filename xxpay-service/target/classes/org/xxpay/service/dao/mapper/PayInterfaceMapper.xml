<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.xxpay.service.dao.mapper.PayInterfaceMapper" >
  <resultMap id="BaseResultMap" type="org.xxpay.core.entity.PayInterface" >
    <id column="IfCode" property="ifCode" jdbcType="VARCHAR" />
    <result column="IfName" property="ifName" jdbcType="VARCHAR" />
    <result column="IfTypeCode" property="ifTypeCode" jdbcType="VARCHAR" />
    <result column="PayType" property="payType" jdbcType="VARCHAR" />
    <result column="Scene" property="scene" jdbcType="TINYINT" />
    <result column="Status" property="status" jdbcType="TINYINT" />
    <result column="Param" property="param" jdbcType="VARCHAR" />
    <result column="Remark" property="remark" jdbcType="VARCHAR" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="Extra" property="extra" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id ,IfCode, IfName, IfTypeCode, PayType, Scene, Status, Param, Remark, CreateTime, UpdateTime,
    Extra
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.xxpay.core.entity.PayInterfaceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_pay_interface
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_pay_interface
    where IfCode = #{ifCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_pay_interface
    where IfCode = #{ifCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.xxpay.core.entity.PayInterfaceExample" >
    delete from t_pay_interface
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.xxpay.core.entity.PayInterface" >
    insert into t_pay_interface (IfCode, IfName, IfTypeCode, 
      PayType, Scene, Status, 
      Param, Remark, CreateTime, 
      UpdateTime, Extra)
    values (#{ifCode,jdbcType=VARCHAR}, #{ifName,jdbcType=VARCHAR}, #{ifTypeCode,jdbcType=VARCHAR}, 
      #{payType,jdbcType=VARCHAR}, #{scene,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{param,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{extra,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.xxpay.core.entity.PayInterface" >
    insert into t_pay_interface
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ifCode != null" >
        IfCode,
      </if>
      <if test="ifName != null" >
        IfName,
      </if>
      <if test="ifTypeCode != null" >
        IfTypeCode,
      </if>
      <if test="payType != null" >
        PayType,
      </if>
      <if test="scene != null" >
        Scene,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="param != null" >
        Param,
      </if>
      <if test="remark != null" >
        Remark,
      </if>
      <if test="createTime != null" >
        CreateTime,
      </if>
      <if test="updateTime != null" >
        UpdateTime,
      </if>
      <if test="extra != null" >
        Extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ifCode != null" >
        #{ifCode,jdbcType=VARCHAR},
      </if>
      <if test="ifName != null" >
        #{ifName,jdbcType=VARCHAR},
      </if>
      <if test="ifTypeCode != null" >
        #{ifTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="scene != null" >
        #{scene,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="param != null" >
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra != null" >
        #{extra,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.xxpay.core.entity.PayInterfaceExample" resultType="java.lang.Integer" >
    select count(*) from t_pay_interface
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_pay_interface
    <set >
      <if test="record.ifCode != null" >
        IfCode = #{record.ifCode,jdbcType=VARCHAR},
      </if>
      <if test="record.ifName != null" >
        IfName = #{record.ifName,jdbcType=VARCHAR},
      </if>
      <if test="record.ifTypeCode != null" >
        IfTypeCode = #{record.ifTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null" >
        PayType = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.scene != null" >
        Scene = #{record.scene,jdbcType=TINYINT},
      </if>
      <if test="record.status != null" >
        Status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.param != null" >
        Param = #{record.param,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        Remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UpdateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.extra != null" >
        Extra = #{record.extra,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_pay_interface
    set IfCode = #{record.ifCode,jdbcType=VARCHAR},
      IfName = #{record.ifName,jdbcType=VARCHAR},
      IfTypeCode = #{record.ifTypeCode,jdbcType=VARCHAR},
      PayType = #{record.payType,jdbcType=VARCHAR},
      Scene = #{record.scene,jdbcType=TINYINT},
      Status = #{record.status,jdbcType=TINYINT},
      Param = #{record.param,jdbcType=VARCHAR},
      Remark = #{record.remark,jdbcType=VARCHAR},
      CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      UpdateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      Extra = #{record.extra,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.xxpay.core.entity.PayInterface" >
    update t_pay_interface
    <set >
      <if test="ifName != null" >
        IfName = #{ifName,jdbcType=VARCHAR},
      </if>
      <if test="ifCode != null" >
        IfCode = #{ifCode,jdbcType=VARCHAR},
      </if>
      <if test="ifTypeCode != null" >
        IfTypeCode = #{ifTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        PayType = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="scene != null" >
        Scene = #{scene,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=TINYINT},
      </if>
      <if test="param != null" >
        Param = #{param,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        Remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra != null" >
        Extra = #{extra,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xxpay.core.entity.PayInterface" >
    update t_pay_interface
    set IfName = #{ifName,jdbcType=VARCHAR},
      IfTypeCode = #{ifTypeCode,jdbcType=VARCHAR},
      PayType = #{payType,jdbcType=VARCHAR},
      Scene = #{scene,jdbcType=TINYINT},
      Status = #{status,jdbcType=TINYINT},
      Param = #{param,jdbcType=VARCHAR},
      Remark = #{remark,jdbcType=VARCHAR},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      Extra = #{extra,jdbcType=VARCHAR}
    where IfCode = #{ifCode,jdbcType=VARCHAR}
  </update>
</mapper>