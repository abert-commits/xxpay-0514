<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.xxpay.service.dao.mapper.BankCardBinMapper" >
  <resultMap id="BaseResultMap" type="org.xxpay.core.entity.BankCardBin" >
    <id column="Id" property="id" jdbcType="BIGINT" />
    <result column="IfTypeCode" property="ifTypeCode" jdbcType="VARCHAR" />
    <result column="CardBin" property="cardBin" jdbcType="VARCHAR" />
    <result column="BankName" property="bankName" jdbcType="VARCHAR" />
    <result column="BankCode" property="bankCode" jdbcType="VARCHAR" />
    <result column="CardName" property="cardName" jdbcType="VARCHAR" />
    <result column="CardType" property="cardType" jdbcType="VARCHAR" />
    <result column="CardLength" property="cardLength" jdbcType="INTEGER" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, IfTypeCode, CardBin, BankName, BankCode, CardName, CardType, CardLength, CreateTime,
    UpdateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.xxpay.core.entity.BankCardBinExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_bank_card_bin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_bank_card_bin
    where Id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_bank_card_bin
    where Id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.xxpay.core.entity.BankCardBinExample" >
    delete from t_bank_card_bin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.xxpay.core.entity.BankCardBin" >
    insert into t_bank_card_bin (Id, IfTypeCode, CardBin,
      BankName, BankCode, CardName,
      CardType, CardLength, CreateTime,
      UpdateTime)
    values (#{id,jdbcType=BIGINT}, #{ifTypeCode,jdbcType=VARCHAR}, #{cardBin,jdbcType=VARCHAR},
      #{bankName,jdbcType=VARCHAR}, #{bankCode,jdbcType=VARCHAR}, #{cardName,jdbcType=VARCHAR},
      #{cardType,jdbcType=VARCHAR}, #{cardLength,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.xxpay.core.entity.BankCardBin" >
    insert into t_bank_card_bin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="ifTypeCode != null" >
        IfTypeCode,
      </if>
      <if test="cardBin != null" >
        CardBin,
      </if>
      <if test="bankName != null" >
        BankName,
      </if>
      <if test="bankCode != null" >
        BankCode,
      </if>
      <if test="cardName != null" >
        CardName,
      </if>
      <if test="cardType != null" >
        CardType,
      </if>
      <if test="cardLength != null" >
        CardLength,
      </if>
      <if test="createTime != null" >
        CreateTime,
      </if>
      <if test="updateTime != null" >
        UpdateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ifTypeCode != null" >
        #{ifTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="cardBin != null" >
        #{cardBin,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null" >
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null" >
        #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="cardType != null" >
        #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardLength != null" >
        #{cardLength,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.xxpay.core.entity.BankCardBinExample" resultType="java.lang.Integer" >
    select count(*) from t_bank_card_bin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_bank_card_bin
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.ifTypeCode != null" >
        IfTypeCode = #{record.ifTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.cardBin != null" >
        CardBin = #{record.cardBin,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null" >
        BankName = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCode != null" >
        BankCode = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.cardName != null" >
        CardName = #{record.cardName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardType != null" >
        CardType = #{record.cardType,jdbcType=VARCHAR},
      </if>
      <if test="record.cardLength != null" >
        CardLength = #{record.cardLength,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UpdateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_bank_card_bin
    set Id = #{record.id,jdbcType=BIGINT},
      IfTypeCode = #{record.ifTypeCode,jdbcType=VARCHAR},
      CardBin = #{record.cardBin,jdbcType=VARCHAR},
      BankName = #{record.bankName,jdbcType=VARCHAR},
      BankCode = #{record.bankCode,jdbcType=VARCHAR},
      CardName = #{record.cardName,jdbcType=VARCHAR},
      CardType = #{record.cardType,jdbcType=VARCHAR},
      CardLength = #{record.cardLength,jdbcType=INTEGER},
      CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      UpdateTime = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.xxpay.core.entity.BankCardBin" >
    update t_bank_card_bin
    <set >
      <if test="ifTypeCode != null" >
        IfTypeCode = #{ifTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="cardBin != null" >
        CardBin = #{cardBin,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        BankName = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null" >
        BankCode = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null" >
        CardName = #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="cardType != null" >
        CardType = #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardLength != null" >
        CardLength = #{cardLength,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xxpay.core.entity.BankCardBin" >
    update t_bank_card_bin
    set IfTypeCode = #{ifTypeCode,jdbcType=VARCHAR},
      CardBin = #{cardBin,jdbcType=VARCHAR},
      BankName = #{bankName,jdbcType=VARCHAR},
      BankCode = #{bankCode,jdbcType=VARCHAR},
      CardName = #{cardName,jdbcType=VARCHAR},
      CardType = #{cardType,jdbcType=VARCHAR},
      CardLength = #{cardLength,jdbcType=INTEGER},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      UpdateTime = #{updateTime,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 批量插入银行卡bin信息 -->
  <insert id="insertBatch" parameterType="java.util.List" >
    insert IGNORE t_bank_card_bin (CardBin, BankName, BankCode, CardName, CardType, CardLength)
    values
    <foreach collection="list" item="detail" index="index" separator=",">
      (
      #{detail.cardBin,jdbcType=VARCHAR},
      #{detail.bankName,jdbcType=VARCHAR},
      #{detail.bankCode,jdbcType=VARCHAR},
      #{detail.cardName,jdbcType=VARCHAR},
      #{detail.cardType,jdbcType=VARCHAR},
      #{detail.cardLength,jdbcType=INTEGER}
      )
    </foreach>
  </insert>

  <!-- 根据银行卡号查询银行卡信息 -->
  <select id="selectByCardNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_bank_card_bin
    where #{cardNo,jdbcType=VARCHAR} like concat(CardBin, '%')
    limit 0,1;
  </select>

  <!-- 根据银行卡号和支付类型查询银行卡信息 -->
  <select id="findByCardNoAndIfTypeCode" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from t_bank_card_bin
    where #{cardNo,jdbcType=VARCHAR} like concat(CardBin, '%')
    <if test="ifTypeCode != null"> AND ifTypeCode = #{ifTypeCode} </if>
    limit 0,1;
  </select>
</mapper>